(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{411:function(e,t,r){"use strict";r.r(t);var i=r(19),o=Object(i.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"how-to-design-a-logger"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-to-design-a-logger"}},[e._v("#")]),e._v(" How to design a logger")]),e._v(" "),r("p",[e._v("My TinyLogger is here "),r("a",{attrs:{href:"https://github.com/RickyWei/TinyLogger",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/RickyWei/TinyLogger"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"design-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#design-api"}},[e._v("#")]),e._v(" Design API")]),e._v(" "),r("ol",[r("li",[e._v("There are two kinds of API format in C++\n"),r("ol",[r("li",[r("code",[e._v("printf()")])]),e._v(" "),r("li",[r("code",[e._v("cout<<")])])])]),e._v(" "),r("li",[r("code",[e._v("cout")]),e._v(" is a easier way than printf since it does need format string(like"),r("code",[e._v("%s%d")]),e._v(")")]),e._v(" "),r("li",[e._v("Use "),r("code",[e._v("#define")]),e._v(" to achieve more convient logger API")])]),e._v(" "),r("h2",{attrs:{id:"synchronize-in-multi-thread"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#synchronize-in-multi-thread"}},[e._v("#")]),e._v(" Synchronize in multi-thread")]),e._v(" "),r("ol",[r("li",[e._v("To avoid logs are mixed, "),r("code",[e._v("formt()")]),e._v(" function is used to promise only one "),r("code",[e._v("<< operator")]),e._v(" will be executed to terminal and file stream")]),e._v(" "),r("li",[e._v("Following above design, no mutex and lock is needed during outputing to terminal or stringstream buffer. When push stringstream buffer to file stream, a lock is needed")]),e._v(" "),r("li",[e._v("One logger object just work with only one line log. This log line will be pushed to terminal and buffer in its destructor.")])]),e._v(" "),r("h2",{attrs:{id:"buffer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[e._v("#")]),e._v(" Buffer")]),e._v(" "),r("ol",[r("li",[e._v("Generally, IO operator is slow, therefore, the design asynchronize log and log file")]),e._v(" "),r("li",[e._v("A file writter thread running in a loop with a timeout and is blocked when buffer size is not full. The timeout ensures that logs can be written to file in time even though the buffer is not full")]),e._v(" "),r("li",[e._v("There are two buffer in the system and they swap with each other which provide a free buffer to logger objects and avoid waiting. It reduce the critical section")]),e._v(" "),r("li",[e._v("The string as the buffer so the size can be auto adjusted when there are huge logs in short time and can be easily cleared by clear() function")])]),e._v(" "),r("h2",{attrs:{id:"other-fetures"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#other-fetures"}},[e._v("#")]),e._v(" Other fetures")]),e._v(" "),r("ol",[r("li",[e._v("Use "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_sequences",target:"_blank",rel:"noopener noreferrer"}},[e._v("ANSI escape code"),r("OutboundLink")],1),e._v(" to color different level Log")])])])}),[],!1,null,null,null);t.default=o.exports}}]);