(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{362:function(t,a,e){t.exports=e.p+"assets/img/valgrind.364e6564.jpg"},363:function(t,a,e){t.exports=e.p+"assets/img/valgrind2.ab7f4330.jpg"},417:function(t,a,e){"use strict";e.r(a);var s=e(19),l=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),s("h2",{attrs:{id:"strace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strace"}},[t._v("#")]),t._v(" strace")]),t._v(" "),s("ol",[s("li",[t._v("追踪系统调用")]),t._v(" "),s("li",[t._v("-c 统计进程所有系统调用")]),t._v(" "),s("li",[t._v("-p 追踪正在运行的进程")])]),t._v(" "),s("h2",{attrs:{id:"gdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gdb"}},[t._v("#")]),t._v(" gdb")]),t._v(" "),s("ol",[s("li",[t._v("程序需要 -g 编译，加入调试信息")]),t._v(" "),s("li",[t._v("gdb\n"),s("ol",[s("li",[t._v("gdb program")]),t._v(" "),s("li",[t._v("gdb program core  //use core dump")]),t._v(" "),s("li",[t._v("gdb program pid   //attach")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"left"}})])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("l")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("列出函数代码及其行数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("b 16")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在代码16行处设置断点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("b func")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在函数func处设置断点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("r")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("运行程序")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("n")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("单条执行语句")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("p i")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("打印i变量的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("bt")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查看函数的堆栈")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("finish")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("退出函数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("q")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("结束调试")])])])]),t._v(" "),s("p",[t._v("设置coredump")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// 查看coredump "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" path, 默认core，即当前目录\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /proc/sys/kernel/core_pattern\n\n// 查看coredump文件最大大小\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("ulimit")]),t._v(" -c\n// 修改 /etc/profile\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("ulimit")]),t._v(" -c unlimited\n\n// 防止同一程序多次coredump覆盖\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data/coredump/core.%e.%p"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /proc/sys/kernel/core_pattern\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("coredump 原因")]),t._v(" "),s("ol",[s("li",[t._v("内存越界")]),t._v(" "),s("li",[t._v("多线程程序使用线程不安全函数")]),t._v(" "),s("li",[t._v("多线程读写数据未加锁")]),t._v(" "),s("li",[t._v("非法指针")]),t._v(" "),s("li",[t._v("堆栈溢出")])]),t._v(" "),s("h2",{attrs:{id:"valgrind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valgrind"}},[t._v("#")]),t._v(" valgrind")]),t._v(" "),s("p",[t._v("https://www.valgrind.org/")]),t._v(" "),s("p",[s("img",{attrs:{src:e(362),alt:"valgrind"}})]),t._v(" "),s("p",[t._v("内核（core）类似于一个虚拟的CPU环境，这样当内存中的某个字节被加载到真实的CPU中时，该字节对应的V bit也被加载到虚拟的CPU环境中")]),t._v(" "),s("p",[s("img",{attrs:{src:e(363),alt:"valgrind table"}})])])}),[],!1,null,null,null);a.default=l.exports}}]);