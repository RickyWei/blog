(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{378:function(t,s,a){t.exports=a.p+"assets/img/compile.0cbad8e3.png"},379:function(t,s,a){t.exports=a.p+"assets/img/cmemorylayout.4bfbd771.png"},380:function(t,s,a){t.exports=a.p+"assets/img/vtable-Page-1.0a69b28b.png"},381:function(t,s,a){t.exports=a.p+"assets/img/vtable-Page-2.887ecfb5.png"},416:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"c"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C++")]),t._v(" "),n("h2",{attrs:{id:"编译及g-选项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译及g-选项"}},[t._v("#")]),t._v(" 编译及g++选项")]),t._v(" "),n("p",[n("img",{attrs:{src:a(378),alt:"Compile Overview"}})]),t._v(" "),n("ol",[n("li",[t._v("预处理\n"),n("ol",[n("li",[t._v("处理条件编译指令")]),t._v(" "),n("li",[t._v("处理头文件包含指令")]),t._v(" "),n("li",[t._v("处理宏定义指令")]),t._v(" "),n("li",[t._v("消除注释")])])]),t._v(" "),n("li",[t._v("编译\n"),n("ol",[n("li",[t._v("词法语法分析，生成汇编")])])]),t._v(" "),n("li",[t._v("汇编\n"),n("ol",[n("li",[t._v("生成机器指令")])])]),t._v(" "),n("li",[t._v("链接\n"),n("ol",[n("li",[t._v("解决符号引用")])])])]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("g++ -E hello.cc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" hello.i\ng++ -S b.i\ng++ -c b.s\ng++ -lstdc++ b.o\n./a.out\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h2",{attrs:{id:"宏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#宏"}},[t._v("#")]),t._v(" 宏")]),t._v(" "),n("ol",[n("li",[t._v("使用括号避免错误")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("do{}while(0)")]),t._v(" or "),n("code",[t._v("({...})")]),t._v(" 定义多行宏，每行末尾添加续行符"),n("code",[t._v("\\")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("do{}while(0)")]),t._v("的好处是可以使用"),n("code",[t._v("if")]),t._v("等跳出语句")]),t._v(" "),n("li",[t._v("仅使用"),n("code",[t._v("{}")]),t._v("会造成麻烦--是否在结尾添加"),n("code",[t._v(";")]),t._v("--如在"),n("code",[t._v("if()")]),t._v("后使用，会使"),n("code",[t._v("else")]),t._v("错误")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PI "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")])])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ADDONE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SQUARE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tmp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SQUARE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tmp = 3 + 3 * 3 + 3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SQUARE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" tmp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("SQUARE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tmp = ((3 + 3) * (3 + 3))")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "x"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TOSTR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" #x")])]),t._v("\nstring s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("TOSTR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"123"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// xy")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CONN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("y")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a=123456")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("_HEADER_H")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("_HEADER_H")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HEADER")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DATE__")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__TIME__")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FILE__")]),t._v("\n__FUNCTION__\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__LINE__")]),t._v("\n__cplusplus\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//DEBUG")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DBG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                          ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __VA_ARGS__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("DBG")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __VA_ARGS__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br")])]),n("h2",{attrs:{id:"c-语言内存区块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-语言内存区块"}},[t._v("#")]),t._v(" C 语言内存区块")]),t._v(" "),n("p",[n("img",{attrs:{src:a(379),alt:"C/C++ memory layout"}})]),t._v(" "),n("ol",[n("li",[t._v("栈区\n"),n("ol",[n("li",[t._v("局部变量，参数，返回值等")])])]),t._v(" "),n("li",[t._v("堆区\n"),n("ol",[n("li",[t._v("new/malloc 的对象")]),t._v(" "),n("li",[t._v("默认作为自由存储区")])])]),t._v(" "),n("li",[t._v("数据区\n"),n("ol",[n("li",[t._v("全局或静态变量")])])]),t._v(" "),n("li",[t._v("代码区\n"),n("ol",[n("li",[t._v("只读存储区（字符常量等）")]),t._v(" "),n("li",[t._v("文本区")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.cpp")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//全局初始化区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//全局未初始化区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//栈")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//栈")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//栈")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123456{post.content}在常量区，p3在栈上")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//全局（静态）初始化区")]),t._v("\n  p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配得来得10字节的区域在堆区")]),t._v("\n  p2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配得来得20字节的区域在堆区")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 123456{post.content}放在常量区，编译器可能会将它与p3所指向的"123456"优化成一块')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h2",{attrs:{id:"static用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#static用法"}},[t._v("#")]),t._v(" Static用法")]),t._v(" "),n("ol",[n("li",[t._v("静态局部变量\n"),n("ol",[n("li",[t._v("静态局部变量在程序执行到该对象的声明处时被首次初始化，即以后的函数调用不再进行初始化(局部变量每次函数调用都会被初始化)")]),t._v(" "),n("li",[t._v("静态局部变量一般在声明处初始化，如果没有显式初始化，会被程序自动初始化为0(局部变量不会被初始化)")]),t._v(" "),n("li",[t._v("它始终驻留在全局数据区，直到程序运行结束。但其作用域为局部作用域，也就是不能在函数体外面使用它(局部变量在栈区，在函数结束后立即释放内存);")])])]),t._v(" "),n("li",[t._v("静态全局变量\n"),n("ol",[n("li",[t._v("定义在函数体外，用于修饰全局变量，表示该变量只在本文件可见（文件隔离）")])])]),t._v(" "),n("li",[t._v("静态函数\n"),n("ol",[n("li",[t._v("类似静态全局变量")]),t._v(" "),n("li",[t._v("静态函数不能被其它文件所用")]),t._v(" "),n("li",[t._v("其它文件中可以定义相同名字的函数，不会发生冲突")])])]),t._v(" "),n("li",[t._v("静态成员变量\n"),n("ol",[n("li",[t._v("静态成员变量属于类，一个类的各个实例共享")])])]),t._v(" "),n("li",[t._v("静态成员函数\n"),n("ol",[n("li",[t._v("静态成员函数不能访问非静态(包括成员函数和数据成员)，但是非静态可以访问静态")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i==2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i==3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a.cc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// normal")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b.cc:(.text+0x6): undefined reference to `n'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b.cc")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("h2",{attrs:{id:"extern用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#extern用法"}},[t._v("#")]),t._v(" extern用法")]),t._v(" "),n("ol",[n("li",[t._v("extern变量和函数\n"),n("ol",[n("li",[t._v("可以修饰变量和函数，表示该变量或函数在其他的地方被定义（本源文件或其他源文件），在这里声明使用它，这样多个源文件共享变量和函数")])])]),t._v(" "),n("li",[t._v('extern "C"\n'),n("ol",[n("li",[t._v("告知编译器按C语言规则寻找函数名，C++会修改函数名（通常加上返回类型和参数类型）")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c func")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c++ _Z4funcid")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Declarations of this file */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("h2",{attrs:{id:"指针和引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指针和引用"}},[t._v("#")]),t._v(" 指针和引用")]),t._v(" "),n("ol",[n("li",[t._v("指针和引用区别\n"),n("ol",[n("li",[t._v("指针可以为空，引用不行")]),t._v(" "),n("li",[t._v("指针可以不初始化，引用必须初始化")]),t._v(" "),n("li",[t._v("指针所指可以改变，引用初始化后所指不可改变（因为是指针常量）")]),t._v(" "),n("li",[t._v("指针和引用的"),n("code",[t._v("++")]),t._v("意义不同")]),t._v(" "),n("li",[t._v("指针sizeof得到指针大小，引用sizeof得到类型大小")])])]),t._v(" "),n("li",[t._v("引用的底层\n"),n("ol",[n("li",[t._v("引用是个指针常量"),n("code",[t._v("int* const ra =&a")])]),t._v(" "),n("li",[t._v("通过汇编可看出引用其实是个指针\n"),n("ol",[n("li",[t._v("lea 了一个地址\n"),n("ol",[n("li",[t._v("mov 会解地址，实际移动的为值")]),t._v(" "),n("li",[t._v("lea 不会解地址，直接赋值地址")])])]),t._v(" "),n("li",[t._v("大小为8B，（64bits machine）")]),t._v(" "),n("li",[t._v("另外a的地址为数据rbp-数据总大小（包含padding）")]),t._v(" "),n("li",[t._v("使用"),n("code",[t._v("int *pa=&a")]),t._v(" 得到相同的汇编")]),t._v(" "),n("li",[t._v("使用"),n("code",[t._v("const")]),t._v("也得到相同汇编")])])])])])]),t._v(" "),n("h2",{attrs:{id:"new与malloc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new与malloc"}},[t._v("#")]),t._v(" new与malloc")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("特征")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("new/delete")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("malloc/free")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("分配内存的位置")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("自由存储区")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("堆")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("内存分配成功的返回值")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("完整类型指针")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("void*")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("内存分配失败的返回值")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("默认抛出异常")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("返回NULL")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("分配内存的大小")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("由编译器根据类型计算得出")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("必须显式指定字节数")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("处理数组")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("有处理数组的new版本new[]")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("需要用户计算数组的大小后进  行内存分配")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("已分配内存的扩充")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("无法直观地处理")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("使用realloc简单完成")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("是否相互调用")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("可以，看具体的operator new/delete实现")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("不可调用new")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("分配内存时内存不足")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("客户能够指定处理函数或重新制定分配器")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("无法通过用户代码进行处理")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("函数重载")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("允许")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("不允许")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("构造函数与析构函数")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("调用")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("不调用")])])])]),t._v(" "),n("h2",{attrs:{id:"函数指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数指针"}},[t._v("#")]),t._v(" 函数指针")]),t._v(" "),n("ol",[n("li",[t._v("函数名"),n("code",[t._v("say")]),t._v("是一个函数指针常量，"),n("code",[t._v("fp")]),t._v("是一个函数指针变量")]),t._v(" "),n("li",[t._v("函数被隐式转换成函数指针")]),t._v(" "),n("li",[n("code",[t._v("*")]),t._v("解函数指针，得到的结果又会被隐式转换成函数指针")]),t._v(" "),n("li",[n("code",[t._v("$")]),t._v("只能使用一次，因为其结果是指向函数指针的指针，不能再对右值取地址")])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number is "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// declare a function pointer")]),t._v("\nfp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("FP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// define a type of function pointer")]),t._v("\nFP f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// void (*fp7)(int) = &&say; //error")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("say"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("h2",{attrs:{id:"函数重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数重载"}},[t._v("#")]),t._v(" 函数重载")]),t._v(" "),n("ol",[n("li",[t._v("函数会被 name mangling，及编译出的函数符号名称被修改，通常加上参数类型")]),t._v(" "),n("li",[t._v("返回值不能用于重载\n"),n("ol",[n("li",[t._v("因为在编译期不会判断函数类型")]),t._v(" "),n("li",[t._v("我们可能忽略函数返回值，如使用"),n("code",[t._v("func()")]),t._v("而不是"),n("code",[t._v("int ret=func()")])])])])]),t._v(" "),n("h2",{attrs:{id:"在c中实现重载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在c中实现重载"}},[t._v("#")]),t._v(" 在C中实现重载")]),t._v(" "),n("ol",[n("li",[t._v("可变参数\n"),n("ol",[n("li",[t._v("可变参数原理，函数调用时参数从右到左压栈，只要知道第一个参数的地址和各个参数类型，就可得到所有参数")])])]),t._v(" "),n("li",[t._v("函数指针\n"),n("ol",[n("li",[t._v("定义一个函数指针类型，再定义改类型的多个函数")]),t._v(" "),n("li",[t._v("利用"),n("code",[t._v("void*")]),t._v("接受任意类型指针，再在具体函数中处理类型")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pathname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pathname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode_t mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//variadic functions -> take variadic arguments")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" oflag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actual declaration")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enables access to variadic function arguments")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parmN <- Name of the last named parameter in the function definition")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" va_list ap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parmN "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the next variadic function argument")]),t._v("\nT "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_arg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" va_list ap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" T "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// makes a copy of the variadic function arguments")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_copy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" va_list dest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" va_list src "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ends traversal of the variadic function arguments")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" va_list ap "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// holds the information needed by va_start, va_arg, va_end, and va_copy")]),t._v("\nva_list args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// va_list is a type")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMax")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" INT_MIN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  va_list args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_arg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("va_end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// necessary")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//func pointer")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddII")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Add f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ia "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ib "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" dres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" da "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" db "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AddII"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ires"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ia"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AddDD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("dres"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("da"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br")])]),n("h2",{attrs:{id:"inline"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inline"}},[t._v("#")]),t._v(" inline")]),t._v(" "),n("ol",[n("li",[t._v("inline的使用\n"),n("ol",[n("li",[t._v("inline需要在函数定义（而非声明）前才有用")]),t._v(" "),n("li",[t._v("inline只是建议，编译器不一定内联展开")]),t._v(" "),n("li",[t._v("inline函数应该是小函数且被多次调用")]),t._v(" "),n("li",[t._v("inline函数体内不应该有loop，if，switch")]),t._v(" "),n("li",[t._v("inline函数不能是虚函数（虚函数发生在运行时，而内联展开在编译时）")]),t._v(" "),n("li",[t._v("inline会将代码复制多次，占用内存")])])]),t._v(" "),n("li",[t._v("inline和宏函数的区别\n"),n("ol",[n("li",[t._v("inline发生在编译期，宏在预处理期")]),t._v(" "),n("li",[t._v("inline函数在编译期会进行类型检查，宏仅仅是文本替换")]),t._v(" "),n("li",[t._v("inline函数利于调试（相比于宏）")])])])]),t._v(" "),n("h2",{attrs:{id:"字节对齐"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字节对齐"}},[t._v("#")]),t._v(" 字节对齐")]),t._v(" "),n("ol",[n("li",[t._v("结构体变量的首地址能够被其最宽基本类型成员的大小所整除")]),t._v(" "),n("li",[t._v("结构体每个成员相对于结构体首地址的偏移量都是成员大小的整数倍，如有需要编译器会在成员之间加上填充字节")]),t._v(" "),n("li",[t._v("结构体的总大小为结构体最宽基本类型成员大小的整数倍，如有需要编译器会在最末一个成员之后加上填充字节")])]),t._v(" "),n("h2",{attrs:{id:"类的大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类的大小"}},[t._v("#")]),t._v(" 类的大小")]),t._v(" "),n("ol",[n("li",[t._v("空类占1B\n"),n("ol",[n("li",[t._v("编译器添加1B，目的是让该类可以实例化，因为实例化其实就是分配地址，若为0无法分配")])])]),t._v(" "),n("li",[t._v("类的函数\n"),n("ol",[n("li",[t._v("类的普通函数不占字节")]),t._v(" "),n("li",[t._v("类的虚函数不占字节，但是会引入虚表指针，占一个指针的大小")]),t._v(" "),n("li",[t._v("类的函数存放在代码区，同一个类的各个实例公用，调用时会隐式传递"),n("code",[t._v("this")]),t._v("指针")]),t._v(" "),n("li",[t._v("每个类实例公用函数，独享变量")]),t._v(" "),n("li",[n("code",[t._v("A *pa=nullptr;")]),t._v("pa可成功调用不含成员变量的函数")]),t._v(" "),n("li",[t._v("函数参数的默认值是静态绑定的，若子类修改父类的默认参数值，调用子类虚函数依然会绑定父类的默认参数值")])])])]),t._v(" "),n("h2",{attrs:{id:"虚函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚函数"}},[t._v("#")]),t._v(" 虚函数")]),t._v(" "),n("ol",[n("li",[t._v("每个类都有一个"),n("code",[t._v("vptr")]),t._v("指向虚函数表（指针数组），虚函数表存放虚函数指针")]),t._v(" "),n("li",[t._v("子类复用基类虚函数表")]),t._v(" "),n("li",[t._v("若子类重写虚函数，函数指针变化\n"),n("ol",[n("li",[t._v("重载：函数名相同，函数的参数个数、参数类型或参数顺序三者中必须至少有一种不同")]),t._v(" "),n("li",[t._v("重定义：也叫做隐藏，子类重新定义父类中有相同名称的非虚函数 ( 参数列表可以不同 ) ，指派生类的函数屏蔽了与其同名的基类函数")]),t._v(" "),n("li",[t._v("重写：也叫做覆盖，一般发生在子类和父类继承关系之间，子类重新定义父类中有相同名称和参数的虚函数 override")])])]),t._v(" "),n("li",[t._v("g++ 中"),n("code",[t._v("vtable")]),t._v("位于类的开始，然后基类成员变量，最后子类成员变量")]),t._v(" "),n("li",[t._v("g++ 中"),n("code",[t._v("vptr")]),t._v("同样位于类的开始")]),t._v(" "),n("li",[t._v("当添加虚析构函数后，vtable有两个析构函数\n"),n("ol",[n("li",[t._v("complete object destructor，只执行析构函数不delete()")]),t._v(" "),n("li",[t._v("deleting destructor，真正delete()")])])])]),t._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token base-clause"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vtable for A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A::_ZTV1A: 3 entries")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0     (int (*)(...))0            <- top_offset")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8     (int (*)(...))(& _ZTI1A)   <- RTTI")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 16    (int (*)(...))A::vf        <- vptr point here")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    size=16 align=8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    base size=12 base align=8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A (0x0x7fc704efa420) 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     vptr=((& A::_ZTV1A) + 16)")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vtable for B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// B::_ZTV1B: 3 entries")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0     (int (*)(...))0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8     (int (*)(...))(& _ZTI1B)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 16    (int (*)(...))B::vf        <- B use same vptr of A")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    size=16 align=8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    base size=16 base align=8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// B (0x0x7fc704e0ca28) 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     vptr=((& B::_ZTV1B) + 16)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   A (0x0x7fc704efaae0) 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//       primary-for B (0x0x7fc704e0ca28)")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br")])]),n("h2",{attrs:{id:"多继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多继承"}},[t._v("#")]),t._v(" 多继承")]),t._v(" "),n("ol",[n("li",[t._v("非菱形 "),n("code",[t._v("class C : public A, public B")]),t._v(" "),n("ol",[n("li",[n("img",{attrs:{src:a(380),alt:"vtable1"}})]),t._v(" "),n("li",[t._v("成员变量按父类被声明顺序排序，接着是子类成员变量")]),t._v(" "),n("li",[t._v("子类的虚函数表只有一个，表项按父类被声明的顺序，中间隔开")]),t._v(" "),n("li",[t._v("top_offset用于当从子类到基类的转换时改变"),n("code",[t._v("this")]),t._v("指针")]),t._v(" "),n("li",[t._v("当子类重写父类虚函数时，会有thunk加入基类的虚函数表，指向对应的子类虚函数")])])]),t._v(" "),n("li",[t._v("菱形\n"),n("ol",[n("li",[t._v("假设有A,B(A),C(A),D(B,C)那么A的成员会被D继承两次，产生歧义\n"),n("ol",[n("li",[n("code",[t._v("d.a = 1; //wrong")])]),t._v(" "),n("li",[n("code",[t._v("d.B::a = 1; d.C::a = 1; //right")])])])]),t._v(" "),n("li",[t._v("使用虚继承解决菱形继承问题\n"),n("ol",[n("li",[n("img",{attrs:{src:a(381),alt:"vtable2"}})]),t._v(" "),n("li",[t._v("虚继承的子类，编译器为其生成一个虚函数指针（vptr）以及一张虚函数表，该vptr位于对象内存最前面；非虚继承直接扩展父类虚函数表")]),t._v(" "),n("li",[t._v("VTT是所有vptr的集合")])])])])])]),t._v(" "),n("h2",{attrs:{id:"构造与析构函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造与析构函数"}},[t._v("#")]),t._v(" 构造与析构函数")]),t._v(" "),n("ol",[n("li",[t._v("默认构造析构函数\n"),n("ol",[n("li",[t._v("若无自己声明的任意以下"),n("code",[t._v("constructor")]),t._v("，编译器默认以"),n("code",[t._v("inline")]),t._v("方式声明以下构造函数\n"),n("ol",[n("li",[n("code",[t._v("default constructor")])]),t._v(" "),n("li",[n("code",[t._v("copy constructor")])]),t._v(" "),n("li",[n("code",[t._v("copy assignment operator")])]),t._v(" "),n("li",[n("code",[t._v("move constructor")])]),t._v(" "),n("li",[n("code",[t._v("move assigment operator")])])])]),t._v(" "),n("li",[t._v("若无自己声明"),n("code",[t._v("destructor")]),t._v("，编译器默认自己生成")]),t._v(" "),n("li",[t._v("同时编译器会生成\n"),n("ol",[n("li",[n("code",[t._v("Class* operator&()")])]),t._v(" "),n("li",[n("code",[t._v("const Class* operator&()")])])])])])]),t._v(" "),n("li",[t._v("构造函数\n"),n("ol",[n("li",[t._v("默认构造函数可初始化\n"),n("ol",[n("li",[t._v("若有类内初始化值，则按此舒适化成员")]),t._v(" "),n("li",[t._v("调用成员对象的默认构造函数")])])]),t._v(" "),n("li",[t._v("构造函数初始化顺序\n"),n("ol",[n("li",[t._v("虚基类")]),t._v(" "),n("li",[t._v("非虚基类")]),t._v(" "),n("li",[t._v("对象成员")]),t._v(" "),n("li",[t._v("类自身构造")])])]),t._v(" "),n("li",[t._v("初始化列表中，变量被初始化的顺序决定于该变量在类中声明的位置")]),t._v(" "),n("li",[n("code",[t._v("const")]),t._v("成员必须在初始化列表中")]),t._v(" "),n("li",[n("code",[t._v("static")]),t._v("成员必须在类外初始化")])])]),t._v(" "),n("li",[t._v("虚析构函数\n"),n("ol",[n("li",[t._v("析构函数应声明为虚函数，这样可以动态绑定真正的虚函数")]),t._v(" "),n("li",[t._v("构造函数不能为虚函数\n"),n("ol",[n("li",[t._v("创建对象时必须知道对象实际类型，虚函数行为是运行期间确定类型")]),t._v(" "),n("li",[t._v("虚函数依赖于虚函数表，构造对象期间虚函数表还未完全初始化")])])])])])]),t._v(" "),n("h2",{attrs:{id:"constexpr-常量表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#constexpr-常量表达式"}},[t._v("#")]),t._v(" constexpr 常量表达式")]),t._v(" "),n("ol",[n("li",[t._v("用途\n"),n("ol",[n("li",[t._v("常量表达式运行计算发生在编译期")]),t._v(" "),n("li",[t._v("可以用于之前需要宏的场合，如数组大小")])])]),t._v(" "),n("li",[t._v("constexpr 限制\n"),n("ol",[n("li",[t._v("该函数只能有一个return，可用三元运算符"),n("code",[t._v("?:")]),t._v("代替分支return")]),t._v(" "),n("li",[t._v("该函数只能调用constexpr函数")]),t._v(" "),n("li",[t._v("只能使用全局constexpr变量")])])]),t._v(" "),n("li",[t._v("与const区别\n"),n("ol",[n("li",[t._v("constexpr的成员函数，变量默认也是const的，反之不是")]),t._v(" "),n("li",[t._v("constexpr告知编译器其值编译期可知，反之无")])])])]),t._v(" "),n("h2",{attrs:{id:"类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),n("ol",[n("li",[t._v("C风格强制转换\n"),n("ol",[n("li",[n("code",[t._v("TypeA a = (TypeA)b")])])])]),t._v(" "),n("li",[t._v("const_cast\n"),n("ol",[n("li",[t._v("去除引用或指针的const限制")])])]),t._v(" "),n("li",[t._v("static_cast\n"),n("ol",[n("li",[t._v("类似强制转换，但是会进行编译期类型检查")])])]),t._v(" "),n("li",[t._v("dynamic_cast\n"),n("ol",[n("li",[n("code",[t._v("dynamic_cast")]),t._v("主要用于父子类之间转换，尤其是父到子的向下转型")]),t._v(" "),n("li",[t._v("向上转型时等于"),n("code",[t._v("static_cast")])]),t._v(" "),n("li",[t._v("向下转型时会进行动态检查，若转换失败指针返回空，引用抛出错误；仅当基类类型指针指向子类对象时可向下转换成功")])])])]),t._v(" "),n("h2",{attrs:{id:"智能指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#智能指针"}},[t._v("#")]),t._v(" 智能指针")]),t._v(" "),n("ol",[n("li",[t._v("解决内存泄漏\n"),n("ol",[n("li",[t._v("保证堆上的对象一定会被释放，任何智能指针不应指向非堆内存，因为非堆内存不能delete")])])]),t._v(" "),n("li",[t._v("本质RAII，使用对象管理资源，构造时获取资源，析构时释放")]),t._v(" "),n("li",[t._v("两种模型\n"),n("ol",[n("li",[t._v("所有权")]),t._v(" "),n("li",[t._v("引用计数")])])]),t._v(" "),n("li",[t._v("auto_ptr\n"),n("ol",[n("li",[t._v("auto_ptr使用所有权模型")]),t._v(" "),n("li",[t._v("deprecated\n"),n("ol",[n("li",[t._v("存在潜在风险，因为失去所有权的auto_ptr指向空，运行时出错")])])])])]),t._v(" "),n("li",[t._v("unique_ptr\n"),n("ol",[n("li",[n("code",[t._v("unique_ptr")]),t._v("用来代替auto_ptr，失去所有权同样指向空，但是后续如果在使用这个空指针，这个错误可悲检查在编译期")]),t._v(" "),n("li",[n("code",[t._v("unique_ptr")]),t._v("支持移动语义")])])]),t._v(" "),n("li",[t._v("share_ptr weak_ptr\n"),n("ol",[n("li",[n("code",[t._v("shared_ptr")]),t._v("引用计数模型")]),t._v(" "),n("li",[n("code",[t._v("weak_ptr")]),t._v("是一种弱引用，不增加或减少引用计数")]),t._v(" "),n("li",[t._v("问题\n"),n("ol",[n("li",[n("code",[t._v("shared_ptr")]),t._v("可能造成循环引用，需要使用"),n("code",[t._v("weak_ptr")]),t._v("解决")]),t._v(" "),n("li",[t._v("不应用一个"),n("code",[t._v("raw pointer")]),t._v("初始化多个"),n("code",[t._v("shared_ptr")]),t._v("，会造成double free问题，因为此时有多个引用计数且都为1")]),t._v(" "),n("li",[n("code",[t._v("this")]),t._v("指针也是"),n("code",[t._v("raw pointer")]),t._v("，在类中若想将"),n("code",[t._v("this")]),t._v("传递应该继承"),n("code",[t._v("enable_shared_from_this")])]),t._v(" "),n("li",[t._v("在调用"),n("code",[t._v("shared_from_this()")]),t._v("前应确保对象被"),n("code",[t._v("shared_ptr")]),t._v("持有，而不是一个"),n("code",[t._v("raw pointer")]),t._v("或"),n("code",[t._v("raw objector")]),t._v("，否则相当于调用"),n("code",[t._v("this")]),t._v("初始化多个"),n("code",[t._v("shared_ptr")])])])])])])]),t._v(" "),n("h2",{attrs:{id:"stl容器底层实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stl容器底层实现"}},[t._v("#")]),t._v(" stl容器底层实现")]),t._v(" "),n("ol",[n("li",[t._v("vector\n"),n("ol",[n("li",[t._v("数组")])])]),t._v(" "),n("li",[t._v("list\n"),n("ol",[n("li",[t._v("双向链表")])])]),t._v(" "),n("li",[t._v("deque\n"),n("ol",[n("li",[t._v("数组+链表")])])]),t._v(" "),n("li",[t._v("queue\n"),n("ol",[n("li",[t._v("list / deque")])])]),t._v(" "),n("li",[t._v("priority_queue\n"),n("ol",[n("li",[t._v("vector实现堆，默认最大堆（堆顶为compare比较后最后一个元素）")]),t._v(" "),n("li",[t._v("使用 make_heap() push_heap() sort_heap()")])])]),t._v(" "),n("li",[t._v("stack\n"),n("ol",[n("li",[t._v("list / deque")])])]),t._v(" "),n("li",[t._v("map\n"),n("ol",[n("li",[t._v("红黑树")])])]),t._v(" "),n("li",[t._v("set\n"),n("ol",[n("li",[t._v("红黑树, key value相同")])])]),t._v(" "),n("li",[t._v("unordered_map\n"),n("ol",[n("li",[t._v("hash_table")])])]),t._v(" "),n("li",[t._v("unordered_set\n"),n("ol",[n("li",[t._v("hash_table")])])]),t._v(" "),n("li",[t._v("multiset\n"),n("ol",[n("li",[t._v("红黑树，插入操作采用的是底层机制RB-tree的insert_equal()而非insert_unique()")])])])]),t._v(" "),n("h2",{attrs:{id:"迭代器种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#迭代器种类"}},[t._v("#")]),t._v(" 迭代器种类")]),t._v(" "),n("ol",[n("li",[t._v("Input iterator(输入迭代器) 可读 只支持自增运算")]),t._v(" "),n("li",[t._v("Output iterator(输出迭代器) 可写 只支持自增运算")]),t._v(" "),n("li",[t._v("Forward iterator(前向迭代器) 读写 只支持自增运算")]),t._v(" "),n("li",[t._v("Bidirectional iterator(双向迭代器) 读写 支持自增和自减运算")]),t._v(" "),n("li",[t._v("Random access iterator(随机访问迭代器) 读写 支持完整的迭代器算术运算")])]),t._v(" "),n("h2",{attrs:{id:"vector迭代器失效"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vector迭代器失效"}},[t._v("#")]),t._v(" vector迭代器失效")]),t._v(" "),n("ol",[n("li",[t._v("删除时，后面的数据要移动，后面的迭代器都失效，但erase()函数可返回下一个元素的新的迭代器")]),t._v(" "),n("li",[t._v("插入时，可能触发扩容")])])])}),[],!1,null,null,null);s.default=e.exports}}]);